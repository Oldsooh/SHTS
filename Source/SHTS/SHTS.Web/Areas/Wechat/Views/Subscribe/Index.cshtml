@using Witbird.SHTS.Web.Public
@model Witbird.SHTS.Model.DemandSubscription
@{
    ViewBag.Title = "需求订阅设置";
    Layout = "~/Areas/Wechat/Views/Shared/WechatLayoutPage.cshtml";
}

@section head
{
    <link href="/content/css/login.css" rel="stylesheet" />
    <link href="/Content/dialog/css/base.css" rel="stylesheet" />
    <link href="/Content/webuploader/webuploader.css" rel="stylesheet" />
    <script src="~/Content/js/city.js"></script>
    <script src="~/Areas/Wechat/Content/scipts/validate.js"></script>
    <style type="text/css">
        .reg-form .cell label {
            position: absolute;
            font-size: 10px;
            color: red !important;
            top: 30px;
            padding-left: 12px;
        }

        #uploader-demo label {
            position: inherit;
            font-size: 10px;
            color: transparent;
            top: 0px;
            padding-left: 0px;
            width: 80% !important;
        }

        .wrap {
            height: auto;
        }

        .register-box {
            position: initial;
            margin-bottom: 20px;
        }

        .reg-form {
            height: auto;
            width: 96%;
            padding-left: 5px;
            padding-right: 5px;
        }

            .reg-form .cell {
                margin-bottom: 10px;
            }

                .reg-form .cell select {
                    height: 100%;
                    width: 31%;
                }

                .reg-form .cell textarea {
                    height: 100%;
                    width: 96%;
                }


                .reg-form .cell input {
                    font-size: 14px;
                    width: 90%;
                    color: black;
                }

        .upbtn {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 77px;
            height: 37px;
            overflow: hidden;
            bottom: auto;
            right: auto;
        }

        #fileform {
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        #fileheer {
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .webuploader-element-invisible {
            position: inherit !important;
        }

        .bytype {
            padding: 5px;
            margin-top: 10px;
        }

            .bytype input {
                height: 15px !important;
                width: 15px !important;
            }

            .bytype label {
                color: #333 !important;
                font-size: 14px;
                font-weight: normal;
                top: -5px;
                left: 30px;
            }

        .subscribe {
            height: auto;
            margin-bottom: 10px;
        }

        .addbtn {
        }

        .closebtn {
            margin-left: 90%;
            margin-top: 10px;
            position: absolute;
            cursor: pointer;
        }

            .closebtn img {
                width: 20px;
                height: 20px;
            }

        #es {
            color: #333 !important;
            font-size: 20px;
            font-weight: normal;
            top: -9px;
            left: 20px;
        }

        #es1 {
            color: #333 !important;
            font-size: 20px;
            font-weight: normal;
            top: -9px;
            left: 20px;
        }

        .disabled {
            background-color: #F5F5F5 !important;
            color: #ACA899 !important;
            cursor: not-allowed;
        }

        .subscribeDetails {
            padding: 10px;
            border: 1px solid #DDD;
            margin-bottom: 20px;
        }

        .hd {
            display: none;
        }

        .selecttype select {
            width: 48% !important;
        }
    </style>

    <script type="text/javascript">

        // Adds new location into subscibed areas.
        function addArea() {
            if (!isEnableSubscription()) {
                return;
            }

            var provinceId = $('#ddlProvince').val();
            var cityId = $('#ddlCity').val();
            var areaId = $('#ddlArea').val();

            if (provinceId == '' || cityId == '') {
                alert('请选择需求区域省份与城市，区/县可不选！');
                return;
            }

            var subscribedAreasList = getAllSubscriedAreas();
            var provinceName = $('#ddlProvince').find('option:selected').text();
            var cityName = $('#ddlCity').find('option:selected').text();
            var areaName = $('#ddlArea').find('option:selected').text();

            if (cityId == '') {
                cityName = '---';
            }

            if (areaId == '') {
                areaName = '---';
            }

            var newAreaId = provinceId + '_' + cityId + '_' + areaId;
            var newCount = subscribedAreasList.length + 1;
            var newAreaValue = provinceName + '/' + cityName + '/' + areaName;

            if (isNewAreaAlreadySelected(subscribedAreasList, newAreaId)) {
                alert('您当前选择的区域位置已经包含到所选区域位置中，请勿重复添加。');
                return;
            }

            var newAreaHtml = '<div id="' + newAreaId + '" class="cell"><input type="text" disabled="disabled" class="text" value="'
                + newAreaValue + '"><span class="closebtn" title="删除"><img src="/Content/images/button_grey_close.png"  class="candisabled"  onclick="deleteArea(\''
                + newAreaId + '\')" /></span></div>';

            $('#selectedAreas').append(newAreaHtml);
            saveNewAreaInfo(newAreaId);
            resetCities();
        }

        function resetCities() {
            $('#ddlProvince').get(0).selectedIndex = 0;
            $('#ddlCity').empty();
            $('#ddlCity').append('<option value="">全省/市</option>');
            $('#ddlArea').empty();
            $('#ddlArea').append('<option value="">全县/区</option>');
        }

        function saveNewAreaInfo(newAreaId) {
            var subscribedAreasList = getAllSubscriedAreas();

            if (subscribedAreasList.length == 0) {
                $('#subscribedAreas').val(newAreaId);
            }
            else {
                var areas = '';
                for (var i = 0; i < subscribedAreasList.length; i++) {
                    areas += subscribedAreasList[i] + ',';
                }

                areas += newAreaId;
                $('#subscribedAreas').val(areas);
            }
        }

        function deleteAreaIdFromCache(areaId) {
            var subscribedAreasList = getAllSubscriedAreas();
            var areas = '';
            var deleteIndex = -1;

            for (var i = 0; i < subscribedAreasList.length; i++) {
                if (subscribedAreasList[i] == areaId) {
                    deleteIndex = i;
                }
                else {
                    areas += subscribedAreasList[i] + ',';
                }
            }

            subscribedAreasList.splice(deleteIndex);

            if (areas.length > 0) {
                areas = areas.substring(0, areas.length - 1);
            }

            $('#subscribedAreas').val(areas);
        }

        // Gets all subscribed areas from hidden field.
        function getAllSubscriedAreas() {
            // value = 'provinceId_cityId_areaId,provinceId_cityId_areaId'
            var subscribedAreas = $('#subscribedAreas').val();

            if (subscribedAreas == undefined) {
                subscribedAreas = '';
            }

            return splitIgnoreEmptyValue(subscribedAreas, ',');
        }

        // Deletes one selected location
        function deleteArea(areaId) {
            if (!isEnableSubscription()) {
                return;
            }

            // delete areaid from hidden field
            deleteAreaIdFromCache(areaId);
            $('#' + areaId).remove();
        }

        // Checks whether currently selected location has already been included in selected locations.
        function isNewAreaAlreadySelected(sourceArray, newAreaId) {
            if (sourceArray.length == 0) {
                return false;
            }
            else {
                for (var i = 0; i < sourceArray.length; i++) {
                    var areaId = sourceArray[i];
                    // select province only
                    var index = areaId.indexOf('__');// two dashes
                    if (index > -1 && newAreaId.indexOf(areaId.substring(0, index)) > -1) {
                        return true;
                    }
                    else if (newAreaId.indexOf(areaId) > -1) {
                        return true;
                    }
                }

                return false;
            }
        }

        function addKeyword() {
            if (!isEnableSubscription()) {
                return;
            }

            var keyword = $('#keyword').val();
            if (keyword.trim() == '') {
                $('#keyword').val('');
                alert('请输入订阅的关键词，如主持人、女歌手。');
                return;
            }

            var subscribedKeywords = $('#subscribedKeywords').val();
            var keywordsList = splitIgnoreEmptyValue(subscribedKeywords, ',');


            for (var i = 0; i < keywordsList.length; i++) {
                if (keywordsList[i] == keyword || subscribedKeywords.indexOf(keyword) > -1) {
                    alert('该关键词已经添加，请更换新的关键词');
                    return;
                }
            }

            if (subscribedKeywords.trim().length == 0) {
                subscribedKeywords = keyword;
            }
            else {
                subscribedKeywords += ',' + keyword;
            }

            $('#subscribedKeywords').val(subscribedKeywords);

            var newKeywordHtml = '<div class="cell"><input type="text" disabled="disabled" class="text" value="'
                + keyword + '"><span class="closebtn" title="删除"><img src="/Content/images/button_grey_close.png" class="candisabled" onclick="deleteKeyword(this);" /></span></div>';
            $('#selectedKeywords').append(newKeywordHtml);

            // reset textbox.
            $('#keyword').val('');
        }

        function deleteKeyword(closeBtn) {
            if (!isEnableSubscription()) {
                return;
            }

            var keyword = $(closeBtn).parent().parent().find('input').val();
            var subscribedKeywords = $('#subscribedKeywords').val();
            var keywordsList = splitIgnoreEmptyValue(subscribedKeywords, ',');

            subscribedKeywords = '';
            for (var i = 0; i < keywordsList.length; i++) {
                if (keywordsList[i] != keyword) {
                    subscribedKeywords += keywordsList[i] + ',';
                }
            }

            if (subscribedKeywords.length > 0) {
                subscribedKeywords = subscribedKeywords.substring(0, subscribedKeywords.length - 1);
            }

            $('#subscribedKeywords').val(subscribedKeywords);
            $(closeBtn).parent().parent().remove();
        }

        function enableSubscribed() {
            if (isEnableSubscription()) {
                $('#enable').val('true');
                // enable all controls
                $('.subscribeDetails').removeClass('disabled');
                $('.subscribeDetails').find('*').each(function () {
                    $(this).removeClass('disabled');
                });
                $('.candisabled').each(function () {
                    $(this).removeAttr('disabled');
                });
            }
            else {
                $('#enable').val('false');

                // disable all controls
                $('.subscribeDetails').addClass('disabled');
                $('.subscribeDetails').find('*').each(function () {
                    $(this).addClass('disabled');
                });
                $('.candisabled').each(function () {
                    $(this).attr('disabled', true);
                });
            }
        }

        function isEnableSubscription() {
            return $('#enableSubscription').is(':checked');
        }

        function isEmailSubscriptionEnabled() {
            return $('#enableEmail').is(':checked');
        }

        function getAllSubscriedTypes() {
            var subscribedTypes = $('#subscriedTypes').val();

            if (subscribedTypes == undefined) {
                subscribedTypes = '';
            }

            return splitIgnoreEmptyValue(subscribedTypes, ',');
        }

        function addType() {
            if (!isEnableSubscription()) {
                return;
            }

            var typeId = $('#ResourceType').val();
            var typeName = $('#ResourceType').find('option:selected').text();
            var subTypeId = '-1';
            var subTypeName = '不限类型';

            if (typeof (typeId) == 'undefined' || typeId == '-1') {
                alert("请选择您需要订阅的需求类别！");
                return;
            }

            switch (typeId) {
                case '1':
                    subTypeId = $('#SpaceTypeId').val();
                    subTypeName = $('#SpaceTypeId').find('option:selected').text();
                    break;
                case '2':
                    subTypeId = $('#ActorTypeId').val();
                    subTypeName = $('#ActorTypeId').find('option:selected').text();
                    break;
                case '3':
                    subTypeId = $('#EquipTypeId').val();
                    subTypeName = $('#EquipTypeId').find('option:selected').text();
                    break;
                case '4':
                    subTypeId = $('#OtherTypeId').val();
                    subTypeName = $('#OtherTypeId').find('option:selected').text();
                    break;
                default:
                    alert('请选择正确的需求类别！');
                    return;
            }

            if (typeof (subTypeId) == 'undefined') {
                subTypeId = '-1';
            }

            var subscriedTypes = getAllSubscriedTypes();

            if (isNewTypeAlreadySelected(subscriedTypes, typeId, subTypeId)) {
                alert('您当前选择的需求类别与类型已包含在已选列表中，请勿重复添加！');
            }
            else {
                var newKey = typeId + '_' + subTypeId;
                var displayValue = typeName + '/' + subTypeName;

                // Appends new added type into page.
                var newTypeHtml = '<div id="' + newKey + '" class="cell"><input type="text" disabled="disabled" class="text" value="'
                    + displayValue + '"><span class="closebtn" title="删除"><img src="/Content/images/button_grey_close.png"  class="candisabled"  onclick="deleteType(\''
                    + newKey + '\')" /></span></div>';

                $('#selectedTypes').append(newTypeHtml);

                // Saves data to cache.
                subscriedTypes.push(newKey);

                var typeCache = '';
                for (var i = 0; i < subscriedTypes.length; i++) {
                    typeCache += subscriedTypes[i] + ',';
                }

                $('#subscriedTypes').val(typeCache);

                // Resets dropdown list
                $('#ResourceType').get(0).selectedIndex = 0;
                $('#SpaceTypeId').get(0).selectedIndex = 0;
                $('#SpaceTypeId').addClass('hd');
                $('#ActorTypeId').get(0).selectedIndex = 0;
                $('#ActorTypeId').addClass('hd');
                $('#EquipTypeId').get(0).selectedIndex = 0;
                $('#EquipTypeId').addClass('hd');
                $('#OtherTypeId').get(0).selectedIndex = 0;
                $('#OtherTypeId').addClass('hd');
            }
        }

        function deleteType(key) {
            if (!isEnableSubscription()) {
                return;
            }

            deleteTypeFromCache(key);
            $('#' + key).remove();
        }

        function deleteTypeFromCache(key) {
            var subscriedTypes = getAllSubscriedTypes();
            var typeCache = '';
            var deleteIndex = -1;

            for (var i = 0; i < subscriedTypes.length; i++) {
                if (subscriedTypes[i] == key) {
                    deleteIndex = i;
                }
                else {
                    typeCache += subscriedTypes[i] + ',';
                }
            }

            subscriedTypes.splice(deleteIndex);

            if (typeCache.length > 0) {
                typeCache = typeCache.substring(0, typeCache.length - 1);
            }

            $('#subscriedTypes').val(typeCache);
        }

        // Checks whether currently selected demand type and subtype has already been included in selected list.
        function isNewTypeAlreadySelected(sourceArray, newTypeId, newSubTypeId) {
            if (sourceArray.length == 0) {
                return false;
            }
            else {
                for (var i = 0; i < sourceArray.length; i++) {
                    var subscriedType = sourceArray[i];
                    var typeArray = splitIgnoreEmptyValue(subscriedType, '_');
                    var typeId = '-1';
                    var subTypeId = '-1';

                    if (typeArray.length == 1) {
                        typeId = typeArray[0];
                    }
                    else if (typeArray.length == 2) {
                        typeId = typeArray[0];
                        subTypeId = typeArray[1];
                    }

                    if (typeId == newTypeId) {
                        if (subTypeId == '-1') {
                            return true;
                        }
                        else if (subTypeId == newSubTypeId) {
                            return true;
                        }
                    }
                }

                return false;
            }
        }

        function isEmailAddressValid() {
            if (isEmailSubscriptionEnabled()) {
                var inputEmail = $('#emailAddress').val();
                if (inputEmail == '') {
                    return false;
                }
                else {
                    return isEmailValid(inputEmail);
                }
            }
            else {
                return true;
            }
        }

        function doEmailTextOnChange() {
            $('#emailAddress').val($('#emailText').val());
        }

        function onBudgetConditionChange() {
            $("#subscriedBudget").val($("#BudgetCondition").val());
        }

        function submit() {
            var subscriptionForm = $('#subscriptionForm');
            if (isEnableSubscription()) {
                var subscribedAreas = getAllSubscriedAreas();
                var subscribedTypes = getAllSubscriedTypes();

                if (subscribedTypes.length == 0) {
                    alert('请选择需要订阅的需求类别！');
                }
                else if (subscribedAreas.length == 0) {
                    alert('请选择需求类型所属的区域位置！');
                }
                else if (!isEmailAddressValid()) {
                    alert('请输入正确的邮箱地址！');
                }
                else {
                    subscriptionForm.submit();
                }
            }
            else {
                subscriptionForm.submit();
            }
        }

        function demandCategoryChange() {
            var ResourceType = $("#ResourceType").val();
            changeResType(ResourceType);
        }

        function changeResType(typeId) {
            $('.sp').addClass("hd");
            $('.ac').addClass("hd");
            $('.eq').addClass("hd");
            $('.ot').addClass("hd");
            switch (typeId) {
                case "1":
                    $('.sp').removeClass("hd");
                    break;
                case "2":
                    $('.ac').removeClass("hd");
                    break;
                case "3":
                    $('.eq').removeClass("hd");
                    break;
                case "4":
                    $('.ot').removeClass("hd");
                    break;
                default:
                    break;
            }
        }

        // Splits string value to an array list by specified separator.
        function splitIgnoreEmptyValue(sourceValue, separator) {
            var array = new Array();

            if (sourceValue != undefined && sourceValue != '') {
                var tempArray = sourceValue.split(separator);
                for (var i = 0; i < tempArray.length; i++) {
                    var value = tempArray[i];
                    if (value != '') {
                        array.push(value);
                    }
                }
            }

            return array;
        }

        function enableEmailSubscription() {
            if (isEmailSubscriptionEnabled()) {
                $('#emailEnabled').val('true');

                if (isEnableSubscription()) {
                    $('#emailText').removeClass('disabled');
                    $('#emailText').removeAttr('disabled');
                }
            }
            else {
                $('#emailEnabled').val('false');
                $('#emailText').addClass('disabled');
                $('#emailText').attr('disabled', 'disabled');
            }

            $('#emailAddress').val($('#emailText').val());
        }
    </script>
    <script language="javascript">
        // string.trim()
        String.prototype.trim = function () {
            return this.replace(/(^\s*)|(\s*$)/g, "");
        }
        String.prototype.ltrim = function () {
            return this.replace(/(^\s*)/g, "");
        }
        String.prototype.rtrim = function () {
            return this.replace(/(\s*$)/g, "");
        }
    </script>
}

<div class="wrap" style="width: 100%; ">
    <div class="register-box" style="width: 100%;height: auto; background-color: #ffffff;">
        <form id="subscriptionForm" action="/wechat/subscribe/update" class="reg-form" method="post">
            <br />
            <div class="cell" style="height:20px;">
                @{
                    var enabled = "false";
                    var checkedString = "";

                    if (Model.IsSubscribed)
                    {
                        enabled = "true";
                        checkedString = "checked=checked";
                    }

                    <input type="hidden" id="enable" name="enable" value="@enabled">

                    <input type="checkbox" id="enableSubscription" @checkedString onchange="enableSubscribed();" style="width: 25px; height: 25px;">
                }
                <label for="enableSubscription" id="es">启用需求订阅功能</label>
            </div>
            <br />
            <div class="subscribeDetails">
                <div class="subscribe">
                    <h3 class="" style="font-size:14px; padding: 5px;">设置需求类型：</h3>
                    @{
                        var subscriedTypes = string.Empty;

                        <div id="selectedTypes">

                            @for (int i = 0; i < Model.SubscribedTypes.Count; i++)
                            {
                                var subcribedTypeId = Model.SubscribedTypes[i].SubscriptionValue;
                                var typeIdArray = Model.SubscribedTypes[i].SubscriptionValue.Split('_');
                                var typeId = -1;
                                var subTypeId = -1;

                                if (typeIdArray.Length == 1)
                                {
                                    typeId = Convert.ToInt32(typeIdArray[0]);
                                }
                                else if (typeIdArray.Length == 2)
                                {
                                    typeId = Convert.ToInt32(typeIdArray[0]);
                                    subTypeId = Convert.ToInt32(typeIdArray[1]);
                                }

                                subscriedTypes += subcribedTypeId + ",";

                                <div id="@subcribedTypeId" class="cell">
                                    <input type="text" disabled="disabled" class="text" value="@Html.GetResourceTypeNameById(typeId, subTypeId)">
                                    <span class="closebtn" title="删除">
                                        <img src="/Content/images/button_grey_close.png" onclick="deleteType('@subcribedTypeId');" class="candisabled" />
                                    </span>
                                </div>
                            }

                            @if (subscriedTypes.Length > 0)
                            {
                                subscriedTypes = subscriedTypes.Substring(0, subscriedTypes.Length - 1);
                            }

                        </div>

                        <input type="hidden" id="subscriedTypes" name="subscriedTypes" value="@subscriedTypes">

                        <div class="cell selecttype">
                            <select name="ResourceType" class="text candisabled" id="ResourceType" onchange="demandCategoryChange()">
                                <option value="-1">请选择需求类别</option>
                                @foreach (var item in Html.ResourceList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <select name="SpaceTypeId" class="text sp hd candisabled" id="SpaceTypeId">
                                <option value="-1">不限类型</option>
                                @foreach (var item in Html.SpaceTypeList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <select name="ActorTypeId" class="text ac hd candisabled" id="ActorTypeId">
                                <option value="-1">不限类型</option>
                                @foreach (var item in Html.ActorTypeList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <select name="EquipTypeId" class="text eq hd candisabled" id="EquipTypeId">
                                <option value="-1">不限类型</option>
                                @foreach (var item in Html.EquipTypeList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <select name="OtherTypeId" class="text ot hd candisabled" id="OtherTypeId">
                                <option value="-1">不限类型</option>
                                @foreach (var item in Html.OtherTypeList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="">
                            <a href="javascript:void(0);" class="candisabled" title="添加类型" onclick="addType();" style="font-weight:bold;">添加</a>
                            <span style="color:#ff0000;">&nbsp;&nbsp;&nbsp;选择完需求类别后点击添加按钮！</span>
                        </div>
                    }
                </div>
                <div class="subscribe">
                    <h3 class="" style="font-size:14px; padding: 5px;">设置需求预算范围：</h3>
                    @{
                        <input type="hidden" id="subscriedBudget" name="subscriedBudget" value="@Model.SubscribedBudgetCondition">

                        <div class="cell">
                            <select name="BudgetCondition" class="text candisabled" style="width:95%;" id="BudgetCondition" onchange="onBudgetConditionChange()">
                                <option value="-1">不限制预算金额</option>
                                @foreach (var item in MiscData.BudgetFilters)
                                {
                                    if (item.Condition.Trim() == (Model.SubscribedBudgetCondition ?? string.Empty).Trim())
                                    {
                                        <option value="@item.Condition" selected="selected">@item.DisplayName</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Condition">@item.DisplayName</option>
                                    }

                                }
                            </select>
                        </div>
                    }
                </div>
                <div class="subscribe">
                    <h3 class="" style="font-size:14px; padding: 5px;">设置区域位置：</h3>
                    @{
                        var areaIds = string.Empty;
                        foreach (var area in Model.SubscribedAreas)
                        {
                            var areaId = area.SubscriptionValue;
                            if (areaId.StartsWith("zhixiashi"))
                            {
                                var ids = areaId.Split('_');
                                ids[0] = ids[1];
                                if (!ids[1].EndsWith("shi"))
                                {
                                    ids[1] = ids[1] + "shi";
                                }
                                areaId = ids[0] + "_" + ids[1] + "_" + ids[2];
                            }

                            areaIds += areaId + ",";
                        }

                        if (areaIds.Length > 0)
                        {
                            areaIds = areaIds.Substring(0, areaIds.Length - 1);
                        }
                    }
                    <input type="hidden" id="subscribedAreas" name="subscribedAreas" value="@areaIds" />
                    <div id="selectedAreas">
                        @{
                            for (int i = 0; i < Model.SubscribedAreas.Count; i++)
                            {
                                var areaId = Model.SubscribedAreas[i].SubscriptionValue;
                                if (areaId.StartsWith("zhixiashi"))
                                {
                                    var ids = areaId.Split('_');
                                    ids[0] = ids[1];
                                    if (!ids[1].EndsWith("shi"))
                                    {
                                        ids[1] = ids[1] + "shi";
                                    }
                                    areaId = ids[0] + "_" + ids[1] + "_" + ids[2];
                                }
                                var areaName = Witbird.SHTS.Web.Public.StaticUtility.GetLocationName(areaId);

                                <div id="@areaId" class="cell">
                                    <input type="text" disabled="disabled" class="text" value="@areaName">
                                    <span class="closebtn" title="删除">
                                        <img src="/Content/images/button_grey_close.png" onclick="deleteArea('@areaId');" class="candisabled" />
                                    </span>
                                </div>
                            }
                        }

                    </div>
                    <div class="cell">
                        <select id="ddlProvince" class="text candisabled" name="Province" onchange="loadCities() ">
                            <option value="">省份</option>
                            @if (Witbird.SHTS.Web.Public.StaticUtility.GetProvice() != null)
                            {
                                foreach (var item in Witbird.SHTS.Web.Public.StaticUtility.GetProvice())
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                        <select id="ddlCity" class="text candisabled" name="City" onchange="loadAreas() ">
                            <option value="">全省/市</option>
                        </select>
                        <select id="ddlArea" class="text candisabled" name="Area">
                            <option value="">全县/区</option>
                        </select>
                    </div>
                    <div class="">
                        <a href="javascript:void(0);" class="candisabled" title="添加区域" onclick="addArea();" style="font-weight:bold;">添加</a>
                        <span style="color:#ff0000;">&nbsp;&nbsp;&nbsp;选择完区域位置后点击添加按钮！</span>
                    </div>
                </div>
            </div>

            <div class="subscribeDetails">

                <div class="subscribe">
                    <h3 class="" style="font-size:14px; padding: 5px;">设置特殊关键词（可选）：</h3>

                    <div class="cell" style="color:#ACA899;height:auto;">
                        如果配置了特殊的关键词，它将与条件一为并列关系，即需同时满足所有条件的需求才能被推送给您。
                    </div>
                    @{
                        var keywords = string.Empty;
                        foreach (var keyword in Model.SubscribedKeywords)
                        {
                            keywords += keyword.SubscriptionValue + ",";
                        }

                        if (keywords.Length > 0)
                        {
                            keywords = keywords.Substring(0, keywords.Length - 1);
                        }
                    }
                    <input type="hidden" id="subscribedKeywords" name="subscribedKeywords" value="@keywords" />
                    <div id="selectedKeywords">
                        @{
                            for (int i = 0; i < Model.SubscribedKeywords.Count; i++)
                            {
                                var keyword = Model.SubscribedKeywords[i].SubscriptionValue;

                                <div class="cell">
                                    <input type="text" disabled="disabled" class="text" value="@keyword">
                                    <span class="closebtn" title="删除">
                                        <img src="/Content/images/button_grey_close.png" class="candisabled" onclick="deleteKeyword(this);" />
                                    </span>
                                </div>
                            }
                        }

                    </div>
                    <div class="cell">
                        <input type="text" id="keyword" placeholder="请输入关键字，如主持人、女歌手" class="text candisabled">
                    </div>

                    <div class="">
                        <a href="javascript:void(0);" title="添加关键字" class="candisabled" onclick="addKeyword();" style="font-weight:bold;">添加</a>
                        <span style="color:#ff0000;">&nbsp;&nbsp;&nbsp;输入关键词后点击添加关键字！</span>
                    </div>
                </div>
            </div>
            <div class="subscribeDetails">
                @{

                    var emailEnabled = "false";
                    var emailCheckedString = "";
                    <div class="subscribe">
                        <div class="cell" style="height:20px;">
                            @if (Model.IsEnableEmailSubscription.HasValue && Model.IsEnableEmailSubscription.Value)
                            {
                                emailEnabled = "true";
                                emailCheckedString = "checked=checked";
                            }

                            <input type="hidden" id="emailEnabled" name="emailEnabled" value="@emailEnabled">

                            <input type="checkbox" id="enableEmail" @emailCheckedString onchange="enableEmailSubscription();" style="width: 25px; height: 25px;" class="candisabled">
                            <label for="enableEmail" id="es1">开启邮箱推送</label>
                        </div>

                        <div class="cell" style="color:#ACA899;height:auto;">
                            开启邮箱推送业务需求信息功能，即时得到客户的需求业务信息。为方便查看需求信息，请微信用户绑定QQ账号，并在微信设置里开通QQ邮箱提醒功能。
                        </div>
                        <div class="cell">
                            <input type="hidden" id="emailAddress" name="emailAddress" value="@Model.EmailAddress">
                            <input type="text" id="emailText" placeholder="请输入您微信号绑定的QQ邮箱账号" onchange="doEmailTextOnChange();" class="text candisabled" value="@Model.EmailAddress">
                        </div>
                    </div>
                }
            </div>
        </form>
        <div class="bottom">
            <button type="button" class="button btn-green" style="width: 96%;margin:0 auto;display:block;" onclick="submit();">保存订阅设置</button>
        </div>
    </div>
    @{
        var errorMessage = ViewData["UpdateSubscriptionResult"] ?? string.Empty;
    }
    <input type="hidden" id="txtMessage" value="@errorMessage" />
</div>

@section FooterJS
{
    <script>
        enableSubscribed();
        enableEmailSubscription();
        var message = $('#txtMessage').val();
        if (message != '') {
            if (message == 'success') {
                $('#txtMessage').val('');
                window.location = '/wechat/demand/index';
            }
            else {
                $('#txtMessage').val('');
                alert(message);
            }
        }
    </script>
}

