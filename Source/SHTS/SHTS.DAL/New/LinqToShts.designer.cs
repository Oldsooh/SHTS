#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Witbird.SHTS.DAL.New
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shts")]
	public partial class LinqToShtsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSpaceFacility(SpaceFacility instance);
    partial void UpdateSpaceFacility(SpaceFacility instance);
    partial void DeleteSpaceFacility(SpaceFacility instance);
    partial void InsertSpaceFeature(SpaceFeature instance);
    partial void UpdateSpaceFeature(SpaceFeature instance);
    partial void DeleteSpaceFeature(SpaceFeature instance);
    partial void InsertSpacePeople(SpacePeople instance);
    partial void UpdateSpacePeople(SpacePeople instance);
    partial void DeleteSpacePeople(SpacePeople instance);
    partial void InsertSpaceSize(SpaceSize instance);
    partial void UpdateSpaceSize(SpaceSize instance);
    partial void DeleteSpaceSize(SpaceSize instance);
    partial void InsertActorType(ActorType instance);
    partial void UpdateActorType(ActorType instance);
    partial void DeleteActorType(ActorType instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertActorFrom(ActorFrom instance);
    partial void UpdateActorFrom(ActorFrom instance);
    partial void DeleteActorFrom(ActorFrom instance);
    partial void InsertActorSex(ActorSex instance);
    partial void UpdateActorSex(ActorSex instance);
    partial void DeleteActorSex(ActorSex instance);
    partial void InsertBudgetFilter(BudgetFilter instance);
    partial void UpdateBudgetFilter(BudgetFilter instance);
    partial void DeleteBudgetFilter(BudgetFilter instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertEquipType(EquipType instance);
    partial void UpdateEquipType(EquipType instance);
    partial void DeleteEquipType(EquipType instance);
    partial void InsertOtherType(OtherType instance);
    partial void UpdateOtherType(OtherType instance);
    partial void DeleteOtherType(OtherType instance);
    partial void InsertSpaceType(SpaceType instance);
    partial void UpdateSpaceType(SpaceType instance);
    partial void DeleteSpaceType(SpaceType instance);
    #endregion
		
		public LinqToShtsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToShtsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToShtsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToShtsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SpaceFacility> SpaceFacilities
		{
			get
			{
				return this.GetTable<SpaceFacility>();
			}
		}
		
		public System.Data.Linq.Table<SpaceFeature> SpaceFeatures
		{
			get
			{
				return this.GetTable<SpaceFeature>();
			}
		}
		
		public System.Data.Linq.Table<SpacePeople> SpacePeoples
		{
			get
			{
				return this.GetTable<SpacePeople>();
			}
		}
		
		public System.Data.Linq.Table<SpaceSize> SpaceSizes
		{
			get
			{
				return this.GetTable<SpaceSize>();
			}
		}
		
		public System.Data.Linq.Table<ActorType> ActorTypes
		{
			get
			{
				return this.GetTable<ActorType>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<ActorFrom> ActorFroms
		{
			get
			{
				return this.GetTable<ActorFrom>();
			}
		}
		
		public System.Data.Linq.Table<ActorSex> ActorSexes
		{
			get
			{
				return this.GetTable<ActorSex>();
			}
		}
		
		public System.Data.Linq.Table<BudgetFilter> BudgetFilters
		{
			get
			{
				return this.GetTable<BudgetFilter>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<EquipType> EquipTypes
		{
			get
			{
				return this.GetTable<EquipType>();
			}
		}
		
		public System.Data.Linq.Table<OtherType> OtherTypes
		{
			get
			{
				return this.GetTable<OtherType>();
			}
		}
		
		public System.Data.Linq.Table<SpaceType> SpaceTypes
		{
			get
			{
				return this.GetTable<SpaceType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceFacility")]
	public partial class SpaceFacility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public SpaceFacility()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceFeature")]
	public partial class SpaceFeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public SpaceFeature()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpacePeople")]
	public partial class SpacePeople : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _MinCount;
		
		private int _MaxCount;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMinCountChanging(int value);
    partial void OnMinCountChanged();
    partial void OnMaxCountChanging(int value);
    partial void OnMaxCountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public SpacePeople()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCount", DbType="Int NOT NULL")]
		public int MinCount
		{
			get
			{
				return this._MinCount;
			}
			set
			{
				if ((this._MinCount != value))
				{
					this.OnMinCountChanging(value);
					this.SendPropertyChanging();
					this._MinCount = value;
					this.SendPropertyChanged("MinCount");
					this.OnMinCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCount", DbType="Int NOT NULL")]
		public int MaxCount
		{
			get
			{
				return this._MaxCount;
			}
			set
			{
				if ((this._MaxCount != value))
				{
					this.OnMaxCountChanging(value);
					this.SendPropertyChanging();
					this._MaxCount = value;
					this.SendPropertyChanged("MaxCount");
					this.OnMaxCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceSize")]
	public partial class SpaceSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _MinSize;
		
		private int _MaxSize;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMinSizeChanging(int value);
    partial void OnMinSizeChanged();
    partial void OnMaxSizeChanging(int value);
    partial void OnMaxSizeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public SpaceSize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSize", DbType="Int NOT NULL")]
		public int MinSize
		{
			get
			{
				return this._MinSize;
			}
			set
			{
				if ((this._MinSize != value))
				{
					this.OnMinSizeChanging(value);
					this.SendPropertyChanging();
					this._MinSize = value;
					this.SendPropertyChanged("MinSize");
					this.OnMinSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSize", DbType="Int NOT NULL")]
		public int MaxSize
		{
			get
			{
				return this._MaxSize;
			}
			set
			{
				if ((this._MaxSize != value))
				{
					this.OnMaxSizeChanging(value);
					this.SendPropertyChanging();
					this._MaxSize = value;
					this.SendPropertyChanged("MaxSize");
					this.OnMaxSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorType")]
	public partial class ActorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
		private int _DisplayOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public ActorType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResourceId;
		
		private int _UserId;
		
		private string _Content;
		
		private bool _MarkForDelete;
		
		private System.DateTime _CreateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Comment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL")]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorFrom")]
	public partial class ActorFrom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public ActorFrom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorSex")]
	public partial class ActorSex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    #endregion
		
		public ActorSex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetFilters")]
	public partial class BudgetFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Condition;
		
		private string _DisplayName;
		
		private int _DisplayOrder;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public BudgetFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResourceType;
		
		private string _Title;
		
		private int _UserId;
		
		private string _ProvinceId;
		
		private string _CityId;
		
		private string _AreaId;
		
		private string _DetailAddress;
		
		private bool _CanFriendlyLink;
		
		private string _Href;
		
		private string _ShortDesc;
		
		private string _Description;
		
		private string _ImageUrls;
		
		private string _Contract;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _QQ;
		
		private string _Telephone;
		
		private string _Mobile;
		
		private string _WeChat;
		
		private string _Email;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _LastUpdatedTime;
		
		private int _ReadCount;
		
		private int _State;
		
		private int _ClickCount;
		
		private int _SpaceTypeId;
		
		private int _SpaceFeatureValue;
		
		private int _SpaceFacilityValue;
		
		private int _SpaceSizeId;
		
		private int _SpacePeopleId;
		
		private int _SpaceTreat;
		
		private int _ActorTypeId;
		
		private int _EquipTypeId;
		
		private int _OtherTypeId;
		
		private int _ActorFromId;
		
		private int _ActorSex;
		
		private System.DateTime _ClickTime;
		
		private string _UserName;
		
		private System.Nullable<int> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResourceTypeChanging(int value);
    partial void OnResourceTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnProvinceIdChanging(string value);
    partial void OnProvinceIdChanged();
    partial void OnCityIdChanging(string value);
    partial void OnCityIdChanged();
    partial void OnAreaIdChanging(string value);
    partial void OnAreaIdChanged();
    partial void OnDetailAddressChanging(string value);
    partial void OnDetailAddressChanged();
    partial void OnCanFriendlyLinkChanging(bool value);
    partial void OnCanFriendlyLinkChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnShortDescChanging(string value);
    partial void OnShortDescChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlsChanging(string value);
    partial void OnImageUrlsChanged();
    partial void OnContractChanging(string value);
    partial void OnContractChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnQQChanging(string value);
    partial void OnQQChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnWeChatChanging(string value);
    partial void OnWeChatChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLastUpdatedTimeChanging(System.DateTime value);
    partial void OnLastUpdatedTimeChanged();
    partial void OnReadCountChanging(int value);
    partial void OnReadCountChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnClickCountChanging(int value);
    partial void OnClickCountChanged();
    partial void OnSpaceTypeIdChanging(int value);
    partial void OnSpaceTypeIdChanged();
    partial void OnSpaceFeatureValueChanging(int value);
    partial void OnSpaceFeatureValueChanged();
    partial void OnSpaceFacilityValueChanging(int value);
    partial void OnSpaceFacilityValueChanged();
    partial void OnSpaceSizeIdChanging(int value);
    partial void OnSpaceSizeIdChanged();
    partial void OnSpacePeopleIdChanging(int value);
    partial void OnSpacePeopleIdChanged();
    partial void OnSpaceTreatChanging(int value);
    partial void OnSpaceTreatChanged();
    partial void OnActorTypeIdChanging(int value);
    partial void OnActorTypeIdChanged();
    partial void OnEquipTypeIdChanging(int value);
    partial void OnEquipTypeIdChanged();
    partial void OnOtherTypeIdChanging(int value);
    partial void OnOtherTypeIdChanged();
    partial void OnActorFromIdChanging(int value);
    partial void OnActorFromIdChanged();
    partial void OnActorSexChanging(int value);
    partial void OnActorSexChanged();
    partial void OnClickTimeChanging(System.DateTime value);
    partial void OnClickTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBudgetChanging(System.Nullable<int> value);
    partial void OnBudgetChanged();
    #endregion
		
		public Resource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="Int NOT NULL")]
		public int ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceId", DbType="NVarChar(MAX)")]
		public string ProvinceId
		{
			get
			{
				return this._ProvinceId;
			}
			set
			{
				if ((this._ProvinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="NVarChar(50)")]
		public string CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="NVarChar(MAX)")]
		public string AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailAddress", DbType="NVarChar(MAX)")]
		public string DetailAddress
		{
			get
			{
				return this._DetailAddress;
			}
			set
			{
				if ((this._DetailAddress != value))
				{
					this.OnDetailAddressChanging(value);
					this.SendPropertyChanging();
					this._DetailAddress = value;
					this.SendPropertyChanged("DetailAddress");
					this.OnDetailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanFriendlyLink", DbType="Bit NOT NULL")]
		public bool CanFriendlyLink
		{
			get
			{
				return this._CanFriendlyLink;
			}
			set
			{
				if ((this._CanFriendlyLink != value))
				{
					this.OnCanFriendlyLinkChanging(value);
					this.SendPropertyChanging();
					this._CanFriendlyLink = value;
					this.SendPropertyChanged("CanFriendlyLink");
					this.OnCanFriendlyLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="NVarChar(MAX)")]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDesc", DbType="NVarChar(MAX)")]
		public string ShortDesc
		{
			get
			{
				return this._ShortDesc;
			}
			set
			{
				if ((this._ShortDesc != value))
				{
					this.OnShortDescChanging(value);
					this.SendPropertyChanging();
					this._ShortDesc = value;
					this.SendPropertyChanged("ShortDesc");
					this.OnShortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrls", DbType="NVarChar(MAX)")]
		public string ImageUrls
		{
			get
			{
				return this._ImageUrls;
			}
			set
			{
				if ((this._ImageUrls != value))
				{
					this.OnImageUrlsChanging(value);
					this.SendPropertyChanging();
					this._ImageUrls = value;
					this.SendPropertyChanged("ImageUrls");
					this.OnImageUrlsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract", DbType="NVarChar(MAX)")]
		public string Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					this.OnContractChanging(value);
					this.SendPropertyChanging();
					this._Contract = value;
					this.SendPropertyChanged("Contract");
					this.OnContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQ", DbType="VarChar(MAX)")]
		public string QQ
		{
			get
			{
				return this._QQ;
			}
			set
			{
				if ((this._QQ != value))
				{
					this.OnQQChanging(value);
					this.SendPropertyChanging();
					this._QQ = value;
					this.SendPropertyChanged("QQ");
					this.OnQQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(MAX)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(MAX)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeChat", DbType="VarChar(MAX)")]
		public string WeChat
		{
			get
			{
				return this._WeChat;
			}
			set
			{
				if ((this._WeChat != value))
				{
					this.OnWeChatChanging(value);
					this.SendPropertyChanging();
					this._WeChat = value;
					this.SendPropertyChanged("WeChat");
					this.OnWeChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedTime
		{
			get
			{
				return this._LastUpdatedTime;
			}
			set
			{
				if ((this._LastUpdatedTime != value))
				{
					this.OnLastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedTime = value;
					this.SendPropertyChanged("LastUpdatedTime");
					this.OnLastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadCount", DbType="Int NOT NULL")]
		public int ReadCount
		{
			get
			{
				return this._ReadCount;
			}
			set
			{
				if ((this._ReadCount != value))
				{
					this.OnReadCountChanging(value);
					this.SendPropertyChanging();
					this._ReadCount = value;
					this.SendPropertyChanged("ReadCount");
					this.OnReadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickCount", DbType="Int NOT NULL")]
		public int ClickCount
		{
			get
			{
				return this._ClickCount;
			}
			set
			{
				if ((this._ClickCount != value))
				{
					this.OnClickCountChanging(value);
					this.SendPropertyChanging();
					this._ClickCount = value;
					this.SendPropertyChanged("ClickCount");
					this.OnClickCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceTypeId", DbType="Int NOT NULL")]
		public int SpaceTypeId
		{
			get
			{
				return this._SpaceTypeId;
			}
			set
			{
				if ((this._SpaceTypeId != value))
				{
					this.OnSpaceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpaceTypeId = value;
					this.SendPropertyChanged("SpaceTypeId");
					this.OnSpaceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceFeatureValue", DbType="Int NOT NULL")]
		public int SpaceFeatureValue
		{
			get
			{
				return this._SpaceFeatureValue;
			}
			set
			{
				if ((this._SpaceFeatureValue != value))
				{
					this.OnSpaceFeatureValueChanging(value);
					this.SendPropertyChanging();
					this._SpaceFeatureValue = value;
					this.SendPropertyChanged("SpaceFeatureValue");
					this.OnSpaceFeatureValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceFacilityValue", DbType="Int NOT NULL")]
		public int SpaceFacilityValue
		{
			get
			{
				return this._SpaceFacilityValue;
			}
			set
			{
				if ((this._SpaceFacilityValue != value))
				{
					this.OnSpaceFacilityValueChanging(value);
					this.SendPropertyChanging();
					this._SpaceFacilityValue = value;
					this.SendPropertyChanged("SpaceFacilityValue");
					this.OnSpaceFacilityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceSizeId", DbType="Int NOT NULL")]
		public int SpaceSizeId
		{
			get
			{
				return this._SpaceSizeId;
			}
			set
			{
				if ((this._SpaceSizeId != value))
				{
					this.OnSpaceSizeIdChanging(value);
					this.SendPropertyChanging();
					this._SpaceSizeId = value;
					this.SendPropertyChanged("SpaceSizeId");
					this.OnSpaceSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpacePeopleId", DbType="Int NOT NULL")]
		public int SpacePeopleId
		{
			get
			{
				return this._SpacePeopleId;
			}
			set
			{
				if ((this._SpacePeopleId != value))
				{
					this.OnSpacePeopleIdChanging(value);
					this.SendPropertyChanging();
					this._SpacePeopleId = value;
					this.SendPropertyChanged("SpacePeopleId");
					this.OnSpacePeopleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaceTreat", DbType="Int NOT NULL")]
		public int SpaceTreat
		{
			get
			{
				return this._SpaceTreat;
			}
			set
			{
				if ((this._SpaceTreat != value))
				{
					this.OnSpaceTreatChanging(value);
					this.SendPropertyChanging();
					this._SpaceTreat = value;
					this.SendPropertyChanged("SpaceTreat");
					this.OnSpaceTreatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorTypeId", DbType="Int NOT NULL")]
		public int ActorTypeId
		{
			get
			{
				return this._ActorTypeId;
			}
			set
			{
				if ((this._ActorTypeId != value))
				{
					this.OnActorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ActorTypeId = value;
					this.SendPropertyChanged("ActorTypeId");
					this.OnActorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipTypeId", DbType="Int NOT NULL")]
		public int EquipTypeId
		{
			get
			{
				return this._EquipTypeId;
			}
			set
			{
				if ((this._EquipTypeId != value))
				{
					this.OnEquipTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EquipTypeId = value;
					this.SendPropertyChanged("EquipTypeId");
					this.OnEquipTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTypeId", DbType="Int NOT NULL")]
		public int OtherTypeId
		{
			get
			{
				return this._OtherTypeId;
			}
			set
			{
				if ((this._OtherTypeId != value))
				{
					this.OnOtherTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OtherTypeId = value;
					this.SendPropertyChanged("OtherTypeId");
					this.OnOtherTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorFromId", DbType="Int NOT NULL")]
		public int ActorFromId
		{
			get
			{
				return this._ActorFromId;
			}
			set
			{
				if ((this._ActorFromId != value))
				{
					this.OnActorFromIdChanging(value);
					this.SendPropertyChanging();
					this._ActorFromId = value;
					this.SendPropertyChanged("ActorFromId");
					this.OnActorFromIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorSex", DbType="Int NOT NULL")]
		public int ActorSex
		{
			get
			{
				return this._ActorSex;
			}
			set
			{
				if ((this._ActorSex != value))
				{
					this.OnActorSexChanging(value);
					this.SendPropertyChanging();
					this._ActorSex = value;
					this.SendPropertyChanged("ActorSex");
					this.OnActorSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickTime", DbType="DateTime NOT NULL")]
		public System.DateTime ClickTime
		{
			get
			{
				return this._ClickTime;
			}
			set
			{
				if ((this._ClickTime != value))
				{
					this.OnClickTimeChanging(value);
					this.SendPropertyChanging();
					this._ClickTime = value;
					this.SendPropertyChanged("ClickTime");
					this.OnClickTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget", DbType="Int")]
		public System.Nullable<int> Budget
		{
			get
			{
				return this._Budget;
			}
			set
			{
				if ((this._Budget != value))
				{
					this.OnBudgetChanging(value);
					this.SendPropertyChanging();
					this._Budget = value;
					this.SendPropertyChanged("Budget");
					this.OnBudgetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipType")]
	public partial class EquipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
		private System.Nullable<int> _DisplayOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public EquipType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherType")]
	public partial class OtherType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
		private System.Nullable<int> _DisplayOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public OtherType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpaceType")]
	public partial class SpaceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _MarkForDelete;
		
		private System.Nullable<int> _DisplayOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkForDeleteChanging(bool value);
    partial void OnMarkForDeleteChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public SpaceType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkForDelete", DbType="Bit NOT NULL")]
		public bool MarkForDelete
		{
			get
			{
				return this._MarkForDelete;
			}
			set
			{
				if ((this._MarkForDelete != value))
				{
					this.OnMarkForDeleteChanging(value);
					this.SendPropertyChanging();
					this._MarkForDelete = value;
					this.SendPropertyChanged("MarkForDelete");
					this.OnMarkForDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
